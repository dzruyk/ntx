CC = i686-w64-mingw32-gcc
LD = i686-w64-mingw32-ld
CFLAGS = -Wall -O0 -g -D_XOPEN_SOURCE=600 -DG_ENABLE_DEBUG -D_CLIENT_DEBUG `pkg-config --cflags gtk+-2.0`
#CFLAGS = -Wall -O2 -D_XOPEN_SOURCE=600 `pkg-config --cflags gtk+-2.0`
CFLAGS += -I/usr/include/fontconfig
LIBS = `pkg-config --libs gtk+-2.0` -lfreetype -lfontconfig -lm
OBJECTS = fc.o fontsel.o console.o console_marshal.o nvt.o client.o gui.o key.o \
	  chn.o chn_telnet.o chn_echo.o fiorw.o os_windows.o
HEADERS = internal.h nvt.h console.h
BINARIES = ntx.exe test_console.exe test_fio.exe fio.exe

COMPILE = $(CC) $(CFLAGS) $(LIBS)

all: $(BINARIES)

fc.o: fc.c fc.h
	$(COMPILE) -c -o $@ $<

fontsel.o: CFLAGS += -Wno-unused-variable
fontsel.o: fontsel.c fontsel.h
	$(COMPILE) -c -o $@ $<

console_marshal.o: console_marshal.c console_marshal.h
	$(COMPILE) -c -o $@ $<

console.o: console.c console.h
	$(COMPILE) -c -o $@ $<

nvt.o: nvt.c nvt.h
	$(COMPILE) -c -o $@ $<

key.o: key.c internal.h
	$(COMPILE) -c -o $@ $<

gui.o: gui.c internal.h
	$(COMPILE) -c -o $@ $<

chn.o: chn.c chn.h
	$(COMPILE) -c -o $@ $<

chn_echo.o: chn_echo.c chn.h
	$(COMPILE) -c -o $@ $<

chn_telnet.o: chn_telnet.c chn.h nvt.h
	$(COMPILE) -c -o $@ $<

chn_pty.o: chn_pty.c chn.h
	$(COMPILE) -c -o $@ $<

client.o: client.c internal.h
	$(COMPILE) -c -o $@ $<

fiorw.o: fiorw.c fiorw.h
	$(COMPILE) -c -o $@ $<

os_windows.o: os_windows.c os.h
	$(COMPILE) -c -o $@ $<

ntx.exe: main.c $(OBJECTS) $(HEADERS)
	$(COMPILE) -o $@ main.c $(OBJECTS) $(LIBS)

test_console.exe: CFLAGS += -Wno-unused-function -Wno-unused-variable \
	-Wno-unused-but-set-variable
test_console.exe: test_console.c console.o console_marshal.o fontsel.o fc.o os_windows.o
	$(COMPILE) -o $@ $^ $(LIBS)

test_fio.exe: CFLAGS += -D_GNU_SOURCE
test_fio.exe: test_fio.c fiorw.o os_windows.o
	$(COMPILE) -o $@ $^ $(LIBS)

test_spawn.exe: test_spawn.c
	$(COMPILE) -o $@ $^ $(LIBS)

fio.exe: fio.o
	$(COMPILE) -o $@ $< $(LIBS)

clean:
	rm -rf *.o $(BINARIES) *~

